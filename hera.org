* hera
:properties:
:header-args: :tangle yes
:end:
** dependencies
#+begin_src emacs-lisp
  ;;; hera.el --- Hera for Hydra
  ;; Copyright (C) 2018 Dustin Lacewell

  ;; Author: Dustin Lacewell <dlacewell@gmail.com>
  ;; Version: 0.1
  ;; Package-Requires: ((emacs "24") (hydra "0"))
  ;; Keywords: hydra
  ;; URL: http://github.com/dustinlacewell/hera

  ;;; Commentary:

  ;; This package provides a simple stack feature for Hydra.

  ;;; Code:
  (require 'hydra)
#+end_src

** private
*** hera--stack
#+begin_src emacs-lisp
  ;; this is a FIFO list of hydra bodies
  (setq hera--stack nil)
#+end_src

** public
*** hera-push
#+begin_src emacs-lisp
  (defun hera-push (hydra-body)
    (when hydra-curr-body-fn
      (push hydra-curr-body-fn hera--stack))
    (call-interactively hydra-body))
#+end_src

*** hera-pop
#+begin_src emacs-lisp
  (defun hera-pop ()
    (let ((x (pop hera--stack)))
      (when x
        (call-interactively x))))
#+end_src

** tests
:properties:
:header-args: :tangle no
:end:
*** hydra-a
 #+begin_src emacs-lisp
   (defhydra hera--test-hydra-a (:color blue)
     ("SPC" (hera-pop) "exit" :exit t)
     ("b" (hera-push 'hera--test-hydra-b/body) :exit t)
     ("c" (hera-push 'hera--test-hydra-c/body) :exit t))
#+end_src

*** hydra-b
 #+begin_src emacs-lisp
   (defhydra hera--test-hydra-b (:color blue)
     ("SPC" (hera-pop) "exit" :exit t)
     ("c" (hera-push 'hera--test-hydra-c/body) :exit t))
#+end_src

*** hydra-c
 #+begin_src emacs-lisp
   (defhydra hera--test-hydra-c (:color blue)
     ("SPC" (hera-pop) "exit" :exit t)
     ("b" (hera-push 'hera--test-hydra-b/body) :exit t))
#+end_src

*** test
#+begin_src emacs-lisp
  (defun hera-test ()
    (interactive)
    (tmp/hydra-a/body))
#+end_src

* Provide
:properties:
:header-args: :tangle yes
:end:
#+begin_src emacs-lisp
  (provide 'hera)
  ;;; hera.el ends here
#+end_src

